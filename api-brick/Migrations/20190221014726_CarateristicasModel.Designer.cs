// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_brick.Data;

namespace api_brick.Migrations
{
    [DbContext(typeof(BrickDbContext))]
    [Migration("20190221014726_CarateristicasModel")]
    partial class CarateristicasModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api_brick.Models.CaracteristicaInmueble", b =>
                {
                    b.Property<int>("CaracteristicaInmuebleID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CarDescripcion");

                    b.Property<string>("CarNombre");

                    b.Property<int?>("Caracteristica_InmuebleID");

                    b.HasKey("CaracteristicaInmuebleID");

                    b.HasIndex("Caracteristica_InmuebleID");

                    b.ToTable("CaracteristicaInmuebles");
                });

            modelBuilder.Entity("api_brick.Models.Caracteristica_Inmueble", b =>
                {
                    b.Property<int>("Caracteristica_InmuebleID")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Caracteristica_InmuebleID");

                    b.ToTable("Caracteristica_Inmuebles");
                });

            modelBuilder.Entity("api_brick.Models.Inmueble", b =>
                {
                    b.Property<int>("InmuebleID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Caracteristica_InmuebleID");

                    b.Property<string>("DescripcionInmueble");

                    b.Property<int>("Precio");

                    b.Property<int>("ProyectoID");

                    b.HasKey("InmuebleID");

                    b.HasIndex("Caracteristica_InmuebleID");

                    b.HasIndex("ProyectoID");

                    b.ToTable("Inmueble");
                });

            modelBuilder.Entity("api_brick.Models.Proyecto", b =>
                {
                    b.Property<int>("ProyectoID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Direccion");

                    b.Property<DateTime>("FechaTerminacion");

                    b.Property<string>("ImgURL");

                    b.Property<string>("NombreProyecto");

                    b.Property<int>("UbicacionID");

                    b.HasKey("ProyectoID");

                    b.HasIndex("UbicacionID");

                    b.ToTable("Proyecto");
                });

            modelBuilder.Entity("api_brick.Models.Ubicacion", b =>
                {
                    b.Property<int>("UbicacionID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ciudad");

                    b.Property<string>("NombreUbicacion");

                    b.HasKey("UbicacionID");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("api_brick.Models.CaracteristicaInmueble", b =>
                {
                    b.HasOne("api_brick.Models.Caracteristica_Inmueble")
                        .WithMany("CaracteristicaInmuebles")
                        .HasForeignKey("Caracteristica_InmuebleID");
                });

            modelBuilder.Entity("api_brick.Models.Inmueble", b =>
                {
                    b.HasOne("api_brick.Models.Caracteristica_Inmueble")
                        .WithMany("Inmuebles")
                        .HasForeignKey("Caracteristica_InmuebleID");

                    b.HasOne("api_brick.Models.Proyecto", "Proyecto")
                        .WithMany("Inmuebles")
                        .HasForeignKey("ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("api_brick.Models.Proyecto", b =>
                {
                    b.HasOne("api_brick.Models.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
